@using GNAY_New1.Controllers

@model GNAY_New1.Models.ApplicationViewModel
@{
    /**/

    ViewBag.Title = "Submit Application";
}


@using (Html.BeginForm("Create", "GNAY_Application", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()
    <section class="about text-center">
        <div class="container">
            <div class="row">
                <h3 style="margin-top:130px">Submit Application</h3>


                <div class="col-md-12">

                    <div class="form-horizontal" style="margin-top:80px; text-align:left">
                        <hr />
                        <p style="font-weight:bold">
                            Please fill all fields marked as (*) to submit application successfully. (NOTE - Keep payment receipt and other documents ready to upload)
                        </p>
                        <div id="divMessage" class="alert alert-danger" style="@ViewBag.MessageStyle">@ViewBag.ErrorMessage</div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-2">

                                @Html.LabelFor(model => model.ApplicantName, htmlAttributes: new { @class = "control-label" })

                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.ApplicantName, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.ApplicantName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.IsNRI, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsNRI)
                                    @Html.ValidationMessageFor(model => model.IsNRI, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PanNo, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.PanNo, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PanNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.AnnualIncome, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.AnnualIncome, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.AnnualIncome, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CommunicationAddress, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CommunicationAddress, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.CommunicationAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CommunicationState, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CommunicationState, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.CommunicationState, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CommunicationPIN, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CommunicationPIN, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.CommunicationPIN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PermanentState, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.PermanentState, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PermanentState, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PermanentPIN, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.PermanentPIN, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.PermanentPIN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.OfficeAddress, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.OfficeAddress, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.OfficeAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.OfficeState, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.OfficeState, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.OfficeState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.OfficePIN, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.OfficePIN, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.OfficePIN, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantApplicantName, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantApplicantName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantApplicantName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantFatherName, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantFatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantFatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantNationality, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantNationality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantNationality, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantDOB, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantDOB, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantDOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantIsNRI, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CoApplicantIsNRI)
                    @Html.ValidationMessageFor(model => model.CoApplicantIsNRI, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantPanNo, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantPanNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantPanNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantOccupation, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantOccupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantOccupation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantDepartment, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantDepartment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantDepartment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantAnnualIncome, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantAnnualIncome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantAnnualIncome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantEmailId, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantEmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantEmailId, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantContactNumber, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantContactNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantCommunicationAddress, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantCommunicationAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantCommunicationAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantCommunicationState, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantCommunicationState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantCommunicationState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantCommunicationPIN, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantCommunicationPIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantCommunicationPIN, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantPermanentAddress, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantPermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantPermanentAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantPermanentState, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantPermanentState, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantPermanentState, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantPermanentPIN, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.CoApplicantPermanentPIN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoApplicantPermanentPIN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantOfficeAddress, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantOfficeAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantOfficeAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantOfficeState, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantOfficeState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantOfficeState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CoApplicantOfficePIN, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantOfficePIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantOfficePIN, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.AppliedProject, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.AppliedProject, new { htmlAttributes = new { @class = "form-control", @required = "true", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.AppliedProject, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.UnitType, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @*@Html.EditorFor(model => model.UnitType, new { htmlAttributes = new { @class = "form-control", @required = "true" } })*@
                                @Html.DropDownListFor(model => model.UnitType,
                                new SelectList(Enum.GetValues(typeof(UnitType))),
                                "Select Unit Type")
                                @Html.ValidationMessageFor(model => model.UnitType, "", new { @class = "text-danger" })
                                <p>
                                    (Small=50sq yard, Medium=60sq yard, Large=80 sq yard)
                                </p>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.AmountPayable, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.AmountPayable, new { htmlAttributes = new { @class = "form-control", @required = "true", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.AmountPayable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.BookingAmount, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.BookingAmount, new { htmlAttributes = new { @class = "form-control", @required = "true", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.BookingAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CarpetAreaInFoot, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.CarpetAreaInFoot, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.CarpetAreaInFoot, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PaymentPlan, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.PaymentPlan, new { htmlAttributes = new { @class = "form-control", @required = "true", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.PaymentPlan, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ApplicationPaymentID, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.ApplicationPaymentID, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.ApplicationPaymentID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PaymentReceipt, htmlAttributes: new { @class = "control-label" })
                                &nbsp; (Max Size 1 MB)
                            </div>
                            <div class="col-md-8">
                                <input type="file" name="PaymentReceiptFile" required />
                                <p style="font-weight:bold; font-size:12px">
                                    NOTE - Pay booking amount to <br />
                                    A/C Name : GNAY, Bank Name : State Bank OF India, <br />
                                    A/C No : 37586803111, IFSC Code : SBIN0011600, <br />
                                    Branch : Sec 100, Noida)
                                </p>


                            </div>

                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.RefundAccNo, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.RefundAccNo, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.RefundAccNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.RefundBankName, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.RefundBankName, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.RefundBankName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.RefundBankIFSC, htmlAttributes: new { @class = "control-label" })
                            </div><div class="col-md-8">
                                @Html.EditorFor(model => model.RefundBankIFSC, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                @Html.ValidationMessageFor(model => model.RefundBankIFSC, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.IsFirstProperty, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFirstProperty)
                    @Html.ValidationMessageFor(model => model.IsFirstProperty, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

                        @*<div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.LoanAmountRequired, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.LoanAmountRequired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanAmountRequired, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.MonthlyGrossIncome, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.MonthlyGrossIncome, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.MonthlyGrossIncome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.MonthlyNetIncome, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.MonthlyNetIncome, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.MonthlyNetIncome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.AnyPreviousLoan, htmlAttributes: new { @class = "control-label", @required = "true" })
            </div><div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AnyPreviousLoan, new { htmlAttributes = new { @required = "true" } })
                    @Html.ValidationMessageFor(model => model.AnyPreviousLoan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.PreviousLoanEMI, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.PreviousLoanEMI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreviousLoanEMI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.PreviousLoanBalance, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.PreviousLoanBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreviousLoanBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.ClubbedIncomeFamilyMemberName, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.ClubbedIncomeFamilyMemberName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClubbedIncomeFamilyMemberName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.ClubbedmemberMonthlyNetIncome, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.ClubbedmemberMonthlyNetIncome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClubbedmemberMonthlyNetIncome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.ClubbedmemberAnyPreviousLoan, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ClubbedmemberAnyPreviousLoan)
                    @Html.ValidationMessageFor(model => model.ClubbedmemberAnyPreviousLoan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.ClubbedmemberPreviousLoanEMI, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.ClubbedmemberPreviousLoanEMI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClubbedmemberPreviousLoanEMI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.ClubbedmemberPreviousLoanBalance, htmlAttributes: new { @class = "control-label" })
            </div><div class="col-md-8">
                @Html.EditorFor(model => model.ClubbedmemberPreviousLoanBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClubbedmemberPreviousLoanBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.EmployeeIDCopy, htmlAttributes: new { @class = "control-label" })
            </div>

            <input type="file" name="EmployeeIDFile" required />
        </div>*@

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.PanCardCopy, htmlAttributes: new { @class = "control-label" })
                                &nbsp; (Max Size 1 MB)
                            </div>
                            @*<div class="col-md-8">
                @Html.EditorFor(model => model.PanCardCopy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PanCardCopy, "", new { @class = "text-danger" })
            </div>*@
                            <input type="file" name="PanCardFile" required />
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.AddressProofCopy, htmlAttributes: new { @class = "control-label" })
                                &nbsp; (Max Size 1 MB)
                            </div>
                            @*<div class="col-md-8">
                @Html.EditorFor(model => model.AddressProofCopy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressProofCopy, "", new { @class = "text-danger" })
            </div>*@
                            <input type="file" name="AddressProofFile" required />
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ApplicantPhoto, htmlAttributes: new { @class = "control-label" })
                                &nbsp; (Max Size 1 MB)
                            </div>
                            @*<div class="col-md-8">
                @Html.EditorFor(model => model.ApplicantPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantPhoto, "", new { @class = "text-danger" })
            </div>*@
                            <input type="file" name="ApplicantPhotoFile" required />
                        </div>

                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CoApplicantPhoto, htmlAttributes: new { @class = "control-label" })
                                &nbsp; (Max Size 1 MB)
                            </div>
                            @*<div class="col-md-8">
                @Html.EditorFor(model => model.CoApplicantPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoApplicantPhoto, "", new { @class = "text-danger" })
            </div>*@
                            <input type="file" name="CoApplicantPhotoFile" />
                        </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Submit" class="btn btn-default" />
                                    <div id="divMessage" class="alert alert-danger" style="@ViewBag.MessageStyle">@ViewBag.ErrorMessage</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
